#
#Master test for timing:
#
#Running queries.include to make sure we are ready for queries to run. 
#
#Setup the tables and import the standard data for queries to run
#Creating index
#--Tables setup
#Running analyze on tables to remove discrepancy in query time. 
#--Base data imported
#Importing measurement number 1
#Importing measurement number 2
ALTER TABLE measurement ALTER INDEX msdid invisible;
#Show plans for the first sets of tests
explain select * from test.measurement join test.server on test.measurement.msm_serv_id = test.server.serv_id join test.rack on test.rack.rack_id = test.server.serv_rack_id join test.center on test.center.cent_id = test.rack.rack_cent_id where test.measurement.msm_value <95;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	measurement	NULL	ALL	msm_serv_id	NULL	NULL	NULL	47216	33.33	Using where
1	SIMPLE	server	NULL	eq_ref	PRIMARY,serv_rack_id	PRIMARY	4	test.measurement.msm_serv_id	1	100.00	NULL
1	SIMPLE	rack	NULL	eq_ref	PRIMARY,rack_cent_id	PRIMARY	4	test.server.serv_rack_id	1	100.00	NULL
1	SIMPLE	center	NULL	eq_ref	PRIMARY	PRIMARY	4	test.rack.rack_cent_id	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`measurement`.`msm_id` AS `msm_id`,`test`.`measurement`.`msm_datetime` AS `msm_datetime`,`test`.`measurement`.`msm_value` AS `msm_value`,`test`.`measurement`.`msm_component_id` AS `msm_component_id`,`test`.`measurement`.`msm_serv_id` AS `msm_serv_id`,`test`.`server`.`serv_id` AS `serv_id`,`test`.`server`.`serv_rack_id` AS `serv_rack_id`,`test`.`rack`.`rack_id` AS `rack_id`,`test`.`rack`.`rack_cent_id` AS `rack_cent_id`,`test`.`center`.`cent_id` AS `cent_id`,`test`.`center`.`cent_city_id` AS `cent_city_id` from `test`.`measurement` join `test`.`server` join `test`.`rack` join `test`.`center` where ((`test`.`server`.`serv_id` = `test`.`measurement`.`msm_serv_id`) and (`test`.`rack`.`rack_id` = `test`.`server`.`serv_rack_id`) and (`test`.`center`.`cent_id` = `test`.`rack`.`rack_cent_id`) and (`test`.`measurement`.`msm_value` < 95))
analyze table measurement update histogram on msm_value;
Table	Op	Msg_type	Msg_text
test.measurement	histogram	status	Histogram statistics created for column 'msm_value'.
#Show plans for the tests with histogram again
explain select * from test.measurement join test.server on test.measurement.msm_serv_id = test.server.serv_id join test.rack on test.rack.rack_id = test.server.serv_rack_id join test.center on test.center.cent_id = test.rack.rack_cent_id where test.measurement.msm_value <95;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	measurement	NULL	ALL	msm_serv_id	NULL	NULL	NULL	47216	13.19	Using where
1	SIMPLE	server	NULL	eq_ref	PRIMARY,serv_rack_id	PRIMARY	4	test.measurement.msm_serv_id	1	100.00	NULL
1	SIMPLE	rack	NULL	eq_ref	PRIMARY,rack_cent_id	PRIMARY	4	test.server.serv_rack_id	1	100.00	NULL
1	SIMPLE	center	NULL	eq_ref	PRIMARY	PRIMARY	4	test.rack.rack_cent_id	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`measurement`.`msm_id` AS `msm_id`,`test`.`measurement`.`msm_datetime` AS `msm_datetime`,`test`.`measurement`.`msm_value` AS `msm_value`,`test`.`measurement`.`msm_component_id` AS `msm_component_id`,`test`.`measurement`.`msm_serv_id` AS `msm_serv_id`,`test`.`server`.`serv_id` AS `serv_id`,`test`.`server`.`serv_rack_id` AS `serv_rack_id`,`test`.`rack`.`rack_id` AS `rack_id`,`test`.`rack`.`rack_cent_id` AS `rack_cent_id`,`test`.`center`.`cent_id` AS `cent_id`,`test`.`center`.`cent_city_id` AS `cent_city_id` from `test`.`measurement` join `test`.`server` join `test`.`rack` join `test`.`center` where ((`test`.`server`.`serv_id` = `test`.`measurement`.`msm_serv_id`) and (`test`.`rack`.`rack_id` = `test`.`server`.`serv_rack_id`) and (`test`.`center`.`cent_id` = `test`.`rack`.`rack_cent_id`) and (`test`.`measurement`.`msm_value` < 95))
